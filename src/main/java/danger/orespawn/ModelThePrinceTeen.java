package danger.orespawn;

import net.minecraft.client.model.*;
import net.minecraft.entity.*;
import net.minecraft.util.*;
import org.lwjgl.opengl.*;

public class ModelThePrinceTeen extends ModelBase
{
    private final float wingspeed;
    ModelRenderer body;
    ModelRenderer leftleg1;
    ModelRenderer tail1;
    ModelRenderer leftleg2;
    ModelRenderer body2;
    ModelRenderer leftleg3;
    ModelRenderer tail2;
    ModelRenderer tail3;
    ModelRenderer lclaw2;
    ModelRenderer lclaw4;
    ModelRenderer lclaw5;
    ModelRenderer lclaw6;
    ModelRenderer lclaw7;
    ModelRenderer tail4;
    ModelRenderer tail5;
    ModelRenderer neck1;
    ModelRenderer neck3;
    ModelRenderer head3;
    ModelRenderer jaw1;
    ModelRenderer jaw5;
    ModelRenderer head7;
    ModelRenderer rightleg1;
    ModelRenderer rightleg2;
    ModelRenderer rightleg3;
    ModelRenderer rclaw2;
    ModelRenderer rclaw4;
    ModelRenderer rclaw5;
    ModelRenderer rclaw7;
    ModelRenderer rclaw6;
    ModelRenderer wing1;
    ModelRenderer wing2;
    ModelRenderer mem1;
    ModelRenderer mem2;
    ModelRenderer lshoulder;
    ModelRenderer rshoulder;
    ModelRenderer rwing1;
    ModelRenderer rmem1;
    ModelRenderer rwing2;
    ModelRenderer rmem2;
    ModelRenderer neck4;
    ModelRenderer neck5;
    ModelRenderer wing3;
    ModelRenderer mem3;
    ModelRenderer rwing3;
    ModelRenderer rmem3;
    ModelRenderer wing4;
    ModelRenderer mem4;
    ModelRenderer rwing4;
    ModelRenderer rmem4;
    ModelRenderer Tailspike1;
    ModelRenderer Tailspike2;
    ModelRenderer Tailspike3;
    ModelRenderer headfin;
    ModelRenderer backfin1;
    ModelRenderer backfin2;
    ModelRenderer neck3L;
    ModelRenderer neck4L;
    ModelRenderer neck3R;
    ModelRenderer neck4R;
    ModelRenderer neck5L;
    ModelRenderer neck5R;
    ModelRenderer jaw5L;
    ModelRenderer jaw5R;
    ModelRenderer head7L;
    ModelRenderer headfinL;
    ModelRenderer headfinR;
    ModelRenderer head7R;
    ModelRenderer jaw1L;
    ModelRenderer jaw1R;
    ModelRenderer head3L;
    ModelRenderer head3R;
    
    public ModelThePrinceTeen(final float f1) {
        this.wingspeed = f1;
        this.textureWidth = 512;
        this.textureHeight = 256;
        this.body = new ModelRenderer(this, 400, 26);
        this.body.addBox(-12.5F, -12.0F, -9.0F, 25, 12, 9);
        this.body.setRotationPoint(0.0F, 0.0F, 9.0F);
        this.body.setTextureSize(512, 256);
        this.body.mirror = true;
        setRotation(body, 0.0698132F, 0.0F, 0.0F);
        this.leftleg1 = new ModelRenderer(this, 300, 10);
        this.leftleg1.addBox(-1.0F, -1.0F, -3.0F, 5, 9, 9);
        this.leftleg1.setRotationPoint(14.0F, -8.0F, 13.0F);
        this.leftleg1.setTextureSize(512, 256);
        this.leftleg1.mirror = true;
        setRotation(leftleg1, -0.5759587F, 0.0F, 0.0F);
        this.tail1 = new ModelRenderer(this, 400, 82);
        this.tail1.addBox(-9.0F, -6.0F, 0.0F, 18, 10, 12);
        this.tail1.setRotationPoint(0.0F, -3.0F, 22.0F);
        this.tail1.setTextureSize(512, 256);
        this.tail1.mirror = true;
        setRotation(tail1, -0.1745329F, 0.0F, 0.0F);
        this.leftleg2 = new ModelRenderer(this, 300, 31);
        this.leftleg2.addBox(-1.0F, 6.0F, -7.0F, 4, 12, 5);
        this.leftleg2.setRotationPoint(14.0F, -8.0F, 13.0F);
        this.leftleg2.setTextureSize(512, 256);
        this.leftleg2.mirror = true;
        setRotation(leftleg2, 0.9773844F, 0.0F, 0.0F);
        this.body2 = new ModelRenderer(this, 400, 50);
        this.body2.addBox(0.0F, -3.0F, -3.0F, 26, 14, 16);
        this.body2.setRotationPoint(-13.0F, -9.0F, 10.0F);
        this.body2.setTextureSize(512, 256);
        this.body2.mirror = true;
        setRotation(body2, -0.1047198F, 0.0F, 0.0F);
        this.leftleg3 = new ModelRenderer(this, 300, 51);
        this.leftleg3.addBox(-1.0F, -1.0F, -2.0F, 3, 19, 4);
        this.leftleg3.setRotationPoint(14.0F, 7.0F, 22.0F);
        this.leftleg3.setTextureSize(512, 256);
        this.leftleg3.mirror = true;
        setRotation(leftleg3, -0.5235988F, 0.0F, 0.0F);
        this.tail2 = new ModelRenderer(this, 400, 106);
        this.tail2.addBox(-5.0F, -4.0F, 0.0F, 10, 7, 10);
        this.tail2.setRotationPoint(0.0F, -2.0F, 33.0F);
        this.tail2.setTextureSize(512, 256);
        this.tail2.mirror = true;
        setRotation(tail2, -0.1396263F, 0.0F, 0.0F);
        this.tail3 = new ModelRenderer(this, 400, 126);
        this.tail3.addBox(-3.0F, -2.0F, 0.0F, 6, 5, 10);
        this.tail3.setRotationPoint(0.0F, -2.0F, 42.0F);
        this.tail3.setTextureSize(512, 256);
        this.tail3.mirror = true;
        setRotation(tail3, -0.1396263F, 0.0F, 0.0F);
        this.lclaw2 = new ModelRenderer(this, 300, 76);
        this.lclaw2.addBox(-3.0F, 0.0F, -3.0F, 7, 3, 8);
        this.lclaw2.setRotationPoint(14.0F, 21.0F, 13.0F);
        this.lclaw2.setTextureSize(512, 256);
        this.lclaw2.mirror = true;
        setRotation(lclaw2, 0.0F, 0.0F, 0.0F);
        this.lclaw4 = new ModelRenderer(this, 310, 123);
        this.lclaw4.addBox(0.0F, 1.0F, -7.0F, 1, 2, 4);
        this.lclaw4.setRotationPoint(14.0F, 21.0F, 13.0F);
        this.lclaw4.setTextureSize(512, 256);
        this.lclaw4.mirror = true;
        setRotation(lclaw4, 0.0F, 0.0F, 0.0F);
        this.lclaw5 = new ModelRenderer(this, 297, 123);
        this.lclaw5.addBox(-2.5F, 1.0F, -7.0F, 1, 2, 4);
        this.lclaw5.setRotationPoint(14.0F, 21.0F, 13.0F);
        this.lclaw5.setTextureSize(512, 256);
        this.lclaw5.mirror = true;
        setRotation(lclaw5, 0.0F, 0.0F, 0.0F);
        this.lclaw6 = new ModelRenderer(this, 322, 123);
        this.lclaw6.addBox(2.5F, 1.0F, -7.0F, 1, 2, 4);
        this.lclaw6.setRotationPoint(14.0F, 21.0F, 13.0F);
        this.lclaw6.setTextureSize(512, 256);
        this.lclaw6.mirror = true;
        setRotation(lclaw6, 0.0F, 0.0F, 0.0F);
        this.lclaw7 = new ModelRenderer(this, 334, 123);
        this.lclaw7.addBox(0.0F, 1.0F, 5.0F, 1, 2, 3);
        this.lclaw7.setRotationPoint(14.0F, 21.0F, 13.0F);
        this.lclaw7.setTextureSize(512, 256);
        this.lclaw7.mirror = true;
        setRotation(lclaw7, 0.0F, 0.0F, 0.0F);
        this.tail4 = new ModelRenderer(this, 400, 143);
        this.tail4.addBox(-2.0F, -2.0F, 0.0F, 4, 4, 10);
        this.tail4.setRotationPoint(0.0F, 0.0F, 51.0F);
        this.tail4.setTextureSize(512, 256);
        this.tail4.mirror = true;
        setRotation(tail4, -0.1396263F, 0.0F, 0.0F);
        this.tail5 = new ModelRenderer(this, 400, 159);
        this.tail5.addBox(-1.5F, -2.0F, 0.0F, 3, 3, 10);
        this.tail5.setRotationPoint(0.0F, 2.0F, 59.0F);
        this.tail5.setTextureSize(512, 256);
        this.tail5.mirror = true;
        setRotation(tail5, -0.1396263F, 0.0F, 0.0F);
        this.neck1 = new ModelRenderer(this, 400, 7);
        this.neck1.addBox(-12.0F, -4.0F, 0.0F, 24, 8, 8);
        this.neck1.setRotationPoint(0.0F, -7.0F, -5.0F);
        this.neck1.setTextureSize(512, 256);
        this.neck1.mirror = true;
        setRotation(neck1, 0.0872665F, 0.0F, 0.0F);
        this.neck3 = new ModelRenderer(this, 365, 5);
        this.neck3.addBox(-3.0F, -3.0F, -9.0F, 6, 6, 10);
        this.neck3.setRotationPoint(0.0F, -8.0F, -5.0F);
        this.neck3.setTextureSize(512, 256);
        this.neck3.mirror = true;
        setRotation(neck3, 0.0174533F, 0.0F, 0.0F);
        this.head3 = new ModelRenderer(this, 143, 149);
        this.head3.addBox(-2.0F, -3.0F, -15.0F, 4, 4, 17);
        this.head3.setRotationPoint(0.0F, -6.0F, -34.0F);
        this.head3.setTextureSize(512, 256);
        this.head3.mirror = true;
        setRotation(head3, -0.2443461F, 0.0F, 0.0F);
        this.jaw1 = new ModelRenderer(this, 143, 173);
        this.jaw1.addBox(-1.5F, 1.0F, -14.0F, 3, 2, 12);
        this.jaw1.setRotationPoint(0.0F, -6.0F, -34.0F);
        this.jaw1.setTextureSize(512, 256);
        this.jaw1.mirror = true;
        setRotation(jaw1, 0.1919862F, 0.0F, 0.0F);
        this.jaw5 = new ModelRenderer(this, 144, 206);
        this.jaw5.addBox(-2.5F, 1.0F, -3.0F, 5, 2, 6);
        this.jaw5.setRotationPoint(0.0F, -6.0F, -34.0F);
        this.jaw5.setTextureSize(512, 256);
        this.jaw5.mirror = true;
        setRotation(jaw5, 0.1919862F, 0.0F, 0.0F);
        this.head7 = new ModelRenderer(this, 144, 192);
        this.head7.addBox(-3.0F, -4.0F, -3.0F, 6, 5, 7);
        this.head7.setRotationPoint(0.0F, -6.0F, -34.0F);
        this.head7.setTextureSize(512, 256);
        this.head7.mirror = true;
        setRotation(head7, -0.2443461F, 0.0F, 0.0F);
        this.rightleg1 = new ModelRenderer(this, 250, 10);
        this.rightleg1.addBox(-1.0F, -1.0F, -3.0F, 5, 9, 9);
        this.rightleg1.setRotationPoint(-17.0F, -8.0F, 13.0F);
        this.rightleg1.setTextureSize(512, 256);
        this.rightleg1.mirror = true;
        setRotation(rightleg1, -0.5934119F, 0.0F, 0.0F);
        this.rightleg2 = new ModelRenderer(this, 250, 32);
        this.rightleg2.addBox(0.0F, 6.0F, -7.0F, 4, 12, 5);
        this.rightleg2.setRotationPoint(-17.0F, -8.0F, 13.0F);
        this.rightleg2.setTextureSize(512, 256);
        this.rightleg2.mirror = true;
        setRotation(rightleg2, 0.9773844F, 0.0F, 0.0F);
        this.rightleg3 = new ModelRenderer(this, 250, 52);
        this.rightleg3.addBox(1.0F, 1.0F, -2.0F, 3, 19, 4);
        this.rightleg3.setRotationPoint(-17.0F, 5.0F, 23.0F);
        this.rightleg3.setTextureSize(512, 256);
        this.rightleg3.mirror = true;
        setRotation(rightleg3, -0.5235988F, 0.0F, 0.0F);
        this.rclaw2 = new ModelRenderer(this, 250, 76);
        this.rclaw2.addBox(-1.0F, 0.0F, -3.0F, 7, 3, 8);
        this.rclaw2.setRotationPoint(-17.0F, 21.0F, 13.0F);
        this.rclaw2.setTextureSize(512, 256);
        this.rclaw2.mirror = true;
        setRotation(rclaw2, 0.0F, 0.0F, 0.0F);
        this.rclaw4 = new ModelRenderer(this, 247, 123);
        this.rclaw4.addBox(2.0F, 1.0F, -7.0F, 1, 2, 4);
        this.rclaw4.setRotationPoint(-17.0F, 21.0F, 13.0F);
        this.rclaw4.setTextureSize(512, 256);
        this.rclaw4.mirror = true;
        setRotation(rclaw4, 0.0F, 0.0F, 0.0F);
        this.rclaw5 = new ModelRenderer(this, 258, 123);
        this.rclaw5.addBox(-0.5F, 1.0F, -7.0F, 1, 2, 4);
        this.rclaw5.setRotationPoint(-17.0F, 21.0F, 13.0F);
        this.rclaw5.setTextureSize(512, 256);
        this.rclaw5.mirror = true;
        setRotation(rclaw5, 0.0F, 0.0F, 0.0F);
        this.rclaw7 = new ModelRenderer(this, 283, 123);
        this.rclaw7.addBox(2.0F, 1.0F, 5.0F, 1, 2, 3);
        this.rclaw7.setRotationPoint(-17.0F, 21.0F, 13.0F);
        this.rclaw7.setTextureSize(512, 256);
        this.rclaw7.mirror = true;
        setRotation(rclaw7, 0.0F, 0.0F, 0.0F);
        this.rclaw6 = new ModelRenderer(this, 270, 123);
        this.rclaw6.addBox(4.5F, 1.0F, -7.0F, 1, 2, 4);
        this.rclaw6.setRotationPoint(-17.0F, 21.0F, 13.0F);
        this.rclaw6.setTextureSize(512, 256);
        this.rclaw6.mirror = true;
        setRotation(rclaw6, 0.0F, 0.0F, 0.0F);
        this.wing1 = new ModelRenderer(this, 10, 30);
        this.wing1.addBox(-1.0F, -1.0F, -1.0F, 23, 2, 2);
        this.wing1.setRotationPoint(13.0F, -12.0F, 3.0F);
        this.wing1.setTextureSize(512, 256);
        this.wing1.mirror = true;
        setRotation(wing1, 0.0F, 0.0872665F, 0.0F);
        this.wing2 = new ModelRenderer(this, 10, 40);
        this.wing2.addBox(-1.0F, -1.0F, -1.0F, 44, 2, 2);
        this.wing2.setRotationPoint(34.0F, -12.0F, 1.0F);
        this.wing2.setTextureSize(512, 256);
        this.wing2.mirror = true;
        setRotation(wing2, 0.0F, 0.0F, 0.0F);
        this.mem1 = new ModelRenderer(this, 10, 60);
        this.mem1.addBox(-2.0F, 0.0F, 0.0F, 24, 1, 21);
        this.mem1.setRotationPoint(13.0F, -12.0F, 3.0F);
        this.mem1.setTextureSize(512, 256);
        this.mem1.mirror = true;
        setRotation(mem1, 0.0F, 0.0872665F, 0.0F);
        this.mem2 = new ModelRenderer(this, 10, 85);
        this.mem2.addBox(0.0F, 0.0F, 0.0F, 43, 1, 21);
        this.mem2.setRotationPoint(34.0F, -12.0F, 1.0F);
        this.mem2.setTextureSize(512, 256);
        this.mem2.mirror = true;
        setRotation(mem2, 0.0F, 0.0F, 0.0F);
        this.lshoulder = new ModelRenderer(this, 370, 78);
        this.lshoulder.addBox(0.0F, 0.0F, 0.0F, 5, 2, 8);
        this.lshoulder.setRotationPoint(8.0F, -13.0F, 1.0F);
        this.lshoulder.setTextureSize(512, 256);
        this.lshoulder.mirror = true;
        setRotation(lshoulder, 0.0698132F, 0.0F, 0.0F);
        this.rshoulder = new ModelRenderer(this, 370, 66);
        this.rshoulder.addBox(0.0F, 0.0F, 0.0F, 5, 2, 8);
        this.rshoulder.setRotationPoint(-13.0F, -13.0F, 1.0F);
        this.rshoulder.setTextureSize(512, 256);
        this.rshoulder.mirror = true;
        setRotation(rshoulder, 0.0698132F, 0.0F, 0.0F);
        this.rwing1 = new ModelRenderer(this, 10, 140);
        this.rwing1.addBox(-22.0F, -1.0F, -1.0F, 23, 2, 2);
        this.rwing1.setRotationPoint(-13.0F, -12.0F, 3.0F);
        this.rwing1.setTextureSize(512, 256);
        this.rwing1.mirror = true;
        setRotation(rwing1, 0.0F, -0.0872665F, 0.0F);
        this.rmem1 = new ModelRenderer(this, 10, 170);
        this.rmem1.addBox(-22.0F, 0.0F, 0.0F, 24, 1, 21);
        this.rmem1.setRotationPoint(-13.0F, -12.0F, 3.0F);
        this.rmem1.setTextureSize(512, 256);
        this.rmem1.mirror = true;
        setRotation(rmem1, 0.0F, -0.0872665F, 0.0F);
        this.rwing2 = new ModelRenderer(this, 10, 150);
        this.rwing2.addBox(-43.0F, -1.0F, -1.0F, 44, 2, 2);
        this.rwing2.setRotationPoint(-34.0F, -12.0F, 1.0F);
        this.rwing2.setTextureSize(512, 256);
        this.rwing2.mirror = true;
        setRotation(rwing2, 0.0F, 0.0F, 0.0F);
        this.rmem2 = new ModelRenderer(this, 10, 195);
        this.rmem2.addBox(-43.0F, 0.0F, 0.0F, 43, 1, 21);
        this.rmem2.setRotationPoint(-34.0F, -12.0F, 1.0F);
        this.rmem2.setTextureSize(512, 256);
        this.rmem2.mirror = true;
        setRotation(rmem2, 0.0F, 0.0F, 0.0F);
        this.neck4 = new ModelRenderer(this, 366, 23);
        this.neck4.addBox(-2.5F, -2.5F, -9.0F, 5, 5, 10);
        this.neck4.setRotationPoint(0.0F, -8.0F, -14.0F);
        this.neck4.setTextureSize(512, 256);
        this.neck4.mirror = true;
        setRotation(neck4, 0.1396263F, 0.0F, 0.0F);
        this.neck5 = new ModelRenderer(this, 369, 41);
        this.neck5.addBox(-2.0F, -2.0F, -9.0F, 4, 4, 10);
        this.neck5.setRotationPoint(0.0F, -7.0F, -22.0F);
        this.neck5.setTextureSize(512, 256);
        this.neck5.mirror = true;
        setRotation(neck5, 0.1396263F, 0.0F, 0.0F);
        this.wing3 = new ModelRenderer(this, 10, 46);
        this.wing3.addBox(0.0F, 0.0F, 0.0F, 44, 2, 2);
        this.wing3.setRotationPoint(13.0F, -13.0F, 3.0F);
        this.wing3.setTextureSize(512, 256);
        this.wing3.mirror = true;
        setRotation(wing3, 0.0F, 0.0F, -0.3490659F);
        this.mem3 = new ModelRenderer(this, 10, 110);
        this.mem3.addBox(0.0F, 0.0F, 0.0F, 43, 1, 21);
        this.mem3.setRotationPoint(13.0F, -12.5F, 5.0F);
        this.mem3.setTextureSize(512, 256);
        this.mem3.mirror = true;
        setRotation(mem3, 0.0F, 0.0F, -0.3490659F);
        this.rwing3 = new ModelRenderer(this, 10, 156);
        this.rwing3.addBox(-43.0F, 0.0F, 0.0F, 44, 2, 2);
        this.rwing3.setRotationPoint(-13.0F, -13.0F, 3.0F);
        this.rwing3.setTextureSize(512, 256);
        this.rwing3.mirror = true;
        setRotation(rwing3, 0.0F, 0.0F, 0.3490659F);
        this.rmem3 = new ModelRenderer(this, 10, 221);
        this.rmem3.addBox(-42.0F, 0.0F, 0.0F, 43, 1, 21);
        this.rmem3.setRotationPoint(-13.0F, -12.5F, 5.0F);
        this.rmem3.setTextureSize(512, 256);
        this.rmem3.mirror = true;
        setRotation(rmem3, 0.0F, 0.0F, 0.3490659F);
        this.wing4 = new ModelRenderer(this, 10, 46);
        this.wing4.addBox(0.0F, 0.0F, 0.0F, 44, 2, 2);
        this.wing4.setRotationPoint(13.0F, -12.0F, 3.0F);
        this.wing4.setTextureSize(512, 256);
        this.wing4.mirror = true;
        setRotation(wing4, 0.0F, 0.0F, 0.3490659F);
        this.mem4 = new ModelRenderer(this, 10, 110);
        this.mem4.addBox(0.0F, 0.0F, 0.0F, 43, 1, 21);
        this.mem4.setRotationPoint(13.0F, -11.5F, 5.0F);
        this.mem4.setTextureSize(512, 256);
        this.mem4.mirror = true;
        setRotation(mem4, 0.0F, 0.0F, 0.3490659F);
        this.rwing4 = new ModelRenderer(this, 10, 156);
        this.rwing4.addBox(-43.0F, 0.0F, 0.0F, 44, 2, 2);
        this.rwing4.setRotationPoint(-13.0F, -12.0F, 3.0F);
        this.rwing4.setTextureSize(512, 256);
        this.rwing4.mirror = true;
        setRotation(rwing4, 0.0F, 0.0F, -0.3490659F);
        this.rmem4 = new ModelRenderer(this, 10, 221);
        this.rmem4.addBox(-42.0F, 0.0F, 0.0F, 43, 1, 21);
        this.rmem4.setRotationPoint(-13.0F, -11.5F, 5.0F);
        this.rmem4.setTextureSize(512, 256);
        this.rmem4.mirror = true;
        setRotation(rmem4, 0.0F, 0.0F, -0.3490659F);
        this.Tailspike1 = new ModelRenderer(this, 150, 0);
        this.Tailspike1.addBox(-7.0F, 0.0F, 0.0F, 14, 2, 6);
        this.Tailspike1.setRotationPoint(0.0F, 2.0F, 69.0F);
        this.Tailspike1.setTextureSize(512, 256);
        this.Tailspike1.mirror = true;
        setRotation(Tailspike1, 0.0F, 0.0F, 0.0F);
        this.Tailspike2 = new ModelRenderer(this, 150, 11);
        this.Tailspike2.addBox(-5.0F, 0.0F, 0.0F, 10, 2, 6);
        this.Tailspike2.setRotationPoint(0.0F, 2.0F, 75.0F);
        this.Tailspike2.setTextureSize(512, 256);
        this.Tailspike2.mirror = true;
        setRotation(Tailspike2, 0.0F, 0.0F, 0.0F);
        this.Tailspike3 = new ModelRenderer(this, 150, 23);
        this.Tailspike3.addBox(0.0F, 0.0F, 0.0F, 1, 1, 15);
        this.Tailspike3.setRotationPoint(0.0F, 2.0F, 80.0F);
        this.Tailspike3.setTextureSize(512, 256);
        this.Tailspike3.mirror = true;
        setRotation(Tailspike3, 0.0F, 0.0F, 0.0F);
        this.headfin = new ModelRenderer(this, 150, 216);
        this.headfin.addBox(-0.5F, -3.0F, 3.0F, 1, 4, 4);
        this.headfin.setRotationPoint(0.0F, -6.0F, -34.0F);
        this.headfin.setTextureSize(512, 256);
        this.headfin.mirror = true;
        setRotation(headfin, 0.0872665F, 0.0F, 0.0F);
        this.backfin1 = new ModelRenderer(this, 69, 0);
        this.backfin1.addBox(-0.5F, 0.0F, 0.0F, 1, 6, 6);
        this.backfin1.setRotationPoint(0.0F, -11.0F, 0.0F);
        this.backfin1.setTextureSize(512, 256);
        this.backfin1.mirror = true;
        setRotation(backfin1, 0.7853982F, 0.0F, 0.0F);
        this.backfin2 = new ModelRenderer(this, 85, 0);
        this.backfin2.addBox(-0.5F, 0.0F, 0.0F, 1, 4, 4);
        this.backfin2.setRotationPoint(0.0F, -11.0F, 10.0F);
        this.backfin2.setTextureSize(512, 256);
        this.backfin2.mirror = true;
        setRotation(backfin2, 0.7853982F, 0.0F, 0.0F);
        this.neck3L = new ModelRenderer(this, 365, 100);
        this.neck3L.addBox(-3.0F, -3.0F, -9.0F, 6, 6, 10);
        this.neck3L.setRotationPoint(8.0F, -8.0F, -5.0F);
        this.neck3L.setTextureSize(512, 256);
        this.neck3L.mirror = true;
        setRotation(neck3L, 0.0174533F, 0.0F, 0.0F);
        this.neck4L = new ModelRenderer(this, 366, 119);
        this.neck4L.addBox(-2.5F, -2.5F, -9.0F, 5, 5, 10);
        this.neck4L.setRotationPoint(8.0F, -8.0F, -14.0F);
        this.neck4L.setTextureSize(512, 256);
        this.neck4L.mirror = true;
        setRotation(neck4L, 0.1396263F, 0.0F, 0.0F);
        this.neck3R = new ModelRenderer(this, 365, 175);
        this.neck3R.addBox(-3.0F, -3.0F, -9.0F, 6, 6, 10);
        this.neck3R.setRotationPoint(-8.0F, -8.0F, -5.0F);
        this.neck3R.setTextureSize(512, 256);
        this.neck3R.mirror = true;
        setRotation(neck3R, 0.0174533F, 0.0F, 0.0F);
        this.neck4R = new ModelRenderer(this, 366, 194);
        this.neck4R.addBox(-2.5F, -2.5F, -9.0F, 5, 5, 10);
        this.neck4R.setRotationPoint(-8.0F, -8.0F, -14.0F);
        this.neck4R.setTextureSize(512, 256);
        this.neck4R.mirror = true;
        setRotation(neck4R, 0.1396263F, 0.0F, 0.0F);
        this.neck5L = new ModelRenderer(this, 369, 137);
        this.neck5L.addBox(-2.0F, -2.0F, -9.0F, 4, 4, 10);
        this.neck5L.setRotationPoint(8.0F, -7.0F, -23.0F);
        this.neck5L.setTextureSize(512, 256);
        this.neck5L.mirror = true;
        setRotation(neck5L, 0.1396263F, 0.0F, 0.0F);
        this.neck5R = new ModelRenderer(this, 369, 212);
        this.neck5R.addBox(-2.0F, -2.0F, -9.0F, 4, 4, 10);
        this.neck5R.setRotationPoint(-8.0F, -7.0F, -23.0F);
        this.neck5R.setTextureSize(512, 256);
        this.neck5R.mirror = true;
        setRotation(neck5R, 0.1396263F, 0.0F, 0.0F);
        this.jaw5L = new ModelRenderer(this, 200, 206);
        this.jaw5L.addBox(-2.5F, 1.0F, -3.0F, 5, 2, 6);
        this.jaw5L.setRotationPoint(8.0F, -6.0F, -34.0F);
        this.jaw5L.setTextureSize(512, 256);
        this.jaw5L.mirror = true;
        setRotation(jaw5L, 0.1919862F, 0.0F, 0.0F);
        this.jaw5R = new ModelRenderer(this, 250, 206);
        this.jaw5R.addBox(-2.5F, 1.0F, -3.0F, 5, 2, 6);
        this.jaw5R.setRotationPoint(-8.0F, -6.0F, -34.0F);
        this.jaw5R.setTextureSize(512, 256);
        this.jaw5R.mirror = true;
        setRotation(jaw5R, 0.1919862F, 0.0F, 0.0F);
        this.head7L = new ModelRenderer(this, 200, 192);
        this.head7L.addBox(-3.0F, -4.0F, -3.0F, 6, 5, 7);
        this.head7L.setRotationPoint(8.0F, -6.0F, -34.0F);
        this.head7L.setTextureSize(512, 256);
        this.head7L.mirror = true;
        setRotation(head7L, -0.2443461F, 0.0F, 0.0F);
        this.headfinL = new ModelRenderer(this, 200, 216);
        this.headfinL.addBox(-0.5F, -3.0F, 3.0F, 1, 4, 4);
        this.headfinL.setRotationPoint(8.0F, -6.0F, -34.0F);
        this.headfinL.setTextureSize(512, 256);
        this.headfinL.mirror = true;
        setRotation(headfinL, 0.0872665F, 0.0F, 0.0F);
        this.headfinR = new ModelRenderer(this, 250, 216);
        this.headfinR.addBox(-0.5F, -3.0F, 3.0F, 1, 4, 4);
        this.headfinR.setRotationPoint(-8.0F, -6.0F, -34.0F);
        this.headfinR.setTextureSize(512, 256);
        this.headfinR.mirror = true;
        setRotation(headfinR, 0.0872665F, 0.0F, 0.0F);
        this.head7R = new ModelRenderer(this, 250, 192);
        this.head7R.addBox(-3.0F, -4.0F, -3.0F, 6, 5, 7);
        this.head7R.setRotationPoint(-8.0F, -6.0F, -34.0F);
        this.head7R.setTextureSize(512, 256);
        this.head7R.mirror = true;
        setRotation(head7R, -0.2443461F, 0.0F, 0.0F);
        this.jaw1L = new ModelRenderer(this, 200, 173);
        this.jaw1L.addBox(-1.5F, 1.0F, -14.0F, 3, 2, 12);
        this.jaw1L.setRotationPoint(8.0F, -6.0F, -34.0F);
        this.jaw1L.setTextureSize(512, 256);
        this.jaw1L.mirror = true;
        setRotation(jaw1L, 0.1919862F, 0.0F, 0.0F);
        this.jaw1R = new ModelRenderer(this, 250, 173);
        this.jaw1R.addBox(-1.5F, 1.0F, -14.0F, 3, 2, 12);
        this.jaw1R.setRotationPoint(-8.0F, -6.0F, -34.0F);
        this.jaw1R.setTextureSize(512, 256);
        this.jaw1R.mirror = true;
        setRotation(jaw1R, 0.1919862F, 0.0F, 0.0F);
        this.head3L = new ModelRenderer(this, 200, 149);
        this.head3L.addBox(-2.0F, -3.0F, -15.0F, 4, 4, 17);
        this.head3L.setRotationPoint(8.0F, -6.0F, -34.0F);
        this.head3L.setTextureSize(512, 256);
        this.head3L.mirror = true;
        setRotation(head3L, -0.2443461F, 0.0F, 0.0F);
        this.head3R = new ModelRenderer(this, 250, 149);
        this.head3R.addBox(-2.0F, -3.0F, -15.0F, 4, 4, 17);
        this.head3R.setRotationPoint(-8.0F, -6.0F, -34.0F);
        this.head3R.setTextureSize(512, 256);
        this.head3R.mirror = true;
        setRotation(head3R, -0.2443461F, 0.0F, 0.0F);
    }
    
    public void render(final Entity entity, final float f, final float f1, final float f2, float f3, final float f4, final float f5) {
        final ThePrinceTeen c = (ThePrinceTeen)entity;
        RenderInfo r;
        float newangle;
        float newangle2;
        float rnewangle;
        float rnewangle2;
        float clawangle;
        float tailspeed = 0.26f;
        float tailamp = 0.08f;
        final float pi4 = 0.7853982f;
        final int current_activity = c.getActivity();
        super.render(entity, f, f1, f2, f3, f4, f5);
        this.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        r = c.getRenderInfo();
        if (f1 > 0.1 && current_activity == 0) {
            newangle = MathHelper.cos(f2 * 1.3f * this.wingspeed) * 3.1415927f * 0.2f * f1;
        }
        else {
            newangle = MathHelper.cos(f2 * 0.3f * this.wingspeed) * 3.1415927f * 0.04f;
        }
        if (current_activity == 1) {
            newangle = MathHelper.cos(f2 * 1.4f * this.wingspeed) * 3.1415927f * 0.4f;
        }
        if (c.getAttacking() != 0) {
            newangle = MathHelper.cos(f2 * 1.7f * this.wingspeed) * 3.1415927f * 0.4f;
        }
        this.wing1.rotateAngleZ = newangle - 0.4f;
        this.wing2.rotateAngleZ = newangle * 1.25f - 0.4f;
        this.wing3.rotateAngleZ = newangle - 0.6f;
        this.wing4.rotateAngleZ = newangle - 0.2f;
        this.wing2.rotationPointY = this.wing1.rotationPointY + (float)Math.sin(this.wing1.rotateAngleZ) * 22.0f;
        this.wing2.rotationPointX = this.wing1.rotationPointX + (float)Math.cos(this.wing1.rotateAngleZ) * 22.0f;
        this.mem1.rotateAngleZ = this.wing1.rotateAngleZ;
        this.mem2.rotateAngleZ = this.wing2.rotateAngleZ;
        this.mem3.rotateAngleZ = this.wing3.rotateAngleZ;
        this.mem4.rotateAngleZ = this.wing4.rotateAngleZ;
        this.mem2.rotationPointY = this.wing2.rotationPointY;
        this.mem2.rotationPointX = this.wing2.rotationPointX;
        this.rwing1.rotateAngleZ = -newangle + 0.4f;
        this.rwing2.rotateAngleZ = -newangle * 1.25f + 0.4f;
        this.rwing3.rotateAngleZ = -newangle + 0.6f;
        this.rwing4.rotateAngleZ = -newangle + 0.2f;
        this.rwing2.rotationPointY = this.rwing1.rotationPointY - (float)Math.sin(this.rwing1.rotateAngleZ) * 22.0f;
        this.rwing2.rotationPointX = this.rwing1.rotationPointX - (float)Math.cos(this.rwing1.rotateAngleZ) * 22.0f;
        this.rmem1.rotateAngleZ = this.rwing1.rotateAngleZ;
        this.rmem2.rotateAngleZ = this.rwing2.rotateAngleZ;
        this.rmem3.rotateAngleZ = this.rwing3.rotateAngleZ;
        this.rmem4.rotateAngleZ = this.rwing4.rotateAngleZ;
        this.rmem2.rotationPointY = this.rwing2.rotationPointY;
        this.rmem2.rotationPointX = this.rwing2.rotationPointX;
        if (f1 > 0.1) {
            newangle = MathHelper.cos(f2 * 0.55f * this.wingspeed) * 3.1415927f * 0.25f * f1;
            newangle2 = MathHelper.cos((float)(f2 * 0.55f * this.wingspeed + 1.5707963267948966)) * 3.1415927f * 0.25f * f1;
            rnewangle = newangle;
            rnewangle2 = newangle2;
        }
        else {
            newangle = 0.0f;
            newangle2 = 0.0f;
            rnewangle = 0.0f;
            rnewangle2 = 0.0f;
        }
        clawangle = 0.0f;
        if (c.getAttacking() != 0) {
            newangle = MathHelper.cos(f2 * this.wingspeed) * 3.1415927f * 0.25f;
            newangle2 = MathHelper.cos((float)(f2 * this.wingspeed + 1.5707963267948966)) * 3.1415927f * 0.25f;
            rnewangle = newangle;
            rnewangle2 = newangle2;
            clawangle = 0.0f;
        }
        if (current_activity == 1 && c.getAttacking() == 0) {
            newangle = -0.5f;
            newangle2 = -1.25f;
            rnewangle = 0.5f;
            rnewangle2 = 1.25f;
        }
        if (current_activity == 1) {
            clawangle = -0.685f;
        }
        this.leftleg1.rotateAngleX = newangle - 0.575f;
        this.leftleg2.rotateAngleX = newangle + 0.977f;
        this.leftleg3.rotateAngleX = newangle2 - 0.523f;
        this.leftleg3.rotationPointY = this.leftleg2.rotationPointY + (float)Math.cos(this.leftleg2.rotateAngleX) * 14.0f + 6.0f;
        this.leftleg3.rotationPointZ = this.leftleg2.rotationPointZ + (float)Math.sin(this.leftleg2.rotateAngleX) * 14.0f;
        this.lclaw2.rotationPointY = this.leftleg3.rotationPointY + (float)Math.cos(this.leftleg3.rotateAngleX) * 17.0f;
        this.lclaw2.rotationPointZ = this.leftleg3.rotationPointZ + (float)Math.sin(this.leftleg3.rotateAngleX) * 17.0f - 1.0f;
        this.lclaw4.rotationPointY = this.lclaw2.rotationPointY;
        this.lclaw4.rotationPointZ = this.lclaw2.rotationPointZ;
        this.lclaw5.rotationPointY = this.lclaw2.rotationPointY;
        this.lclaw5.rotationPointZ = this.lclaw2.rotationPointZ;
        this.lclaw6.rotationPointY = this.lclaw2.rotationPointY;
        this.lclaw6.rotationPointZ = this.lclaw2.rotationPointZ;
        this.lclaw7.rotationPointY = this.lclaw2.rotationPointY;
        this.lclaw7.rotationPointZ = this.lclaw2.rotationPointZ;
        this.lclaw2.rotateAngleX = clawangle;
        this.lclaw4.rotateAngleX = clawangle;
        this.lclaw5.rotateAngleX = clawangle;
        this.lclaw6.rotateAngleX = clawangle;
        this.lclaw7.rotateAngleX = clawangle;
        this.rightleg1.rotateAngleX = -rnewangle - 0.575f;
        this.rightleg2.rotateAngleX = -rnewangle + 0.977f;
        this.rightleg3.rotateAngleX = -rnewangle2 - 0.523f;
        this.rightleg3.rotationPointY = this.rightleg2.rotationPointY + (float)Math.cos(this.rightleg2.rotateAngleX) * 14.0f + 5.0f;
        this.rightleg3.rotationPointZ = this.rightleg2.rotationPointZ + (float)Math.sin(this.rightleg2.rotateAngleX) * 14.0f;
        this.rclaw2.rotationPointY = this.rightleg3.rotationPointY + (float)Math.cos(this.rightleg3.rotateAngleX) * 17.0f;
        this.rclaw2.rotationPointZ = this.rightleg3.rotationPointZ + (float)Math.sin(this.rightleg3.rotateAngleX) * 17.0f - 1.0f;
        this.rclaw4.rotationPointY = this.rclaw2.rotationPointY;
        this.rclaw4.rotationPointZ = this.rclaw2.rotationPointZ;
        this.rclaw5.rotationPointY = this.rclaw2.rotationPointY;
        this.rclaw5.rotationPointZ = this.rclaw2.rotationPointZ;
        this.rclaw6.rotationPointY = this.rclaw2.rotationPointY;
        this.rclaw6.rotationPointZ = this.rclaw2.rotationPointZ;
        this.rclaw7.rotationPointY = this.rclaw2.rotationPointY;
        this.rclaw7.rotationPointZ = this.rclaw2.rotationPointZ;
        this.rclaw2.rotateAngleX = clawangle;
        this.rclaw4.rotateAngleX = clawangle;
        this.rclaw5.rotateAngleX = clawangle;
        this.rclaw6.rotateAngleX = clawangle;
        this.rclaw7.rotateAngleX = clawangle;
        if (c.getAttacking() != 0) {
            tailspeed = 0.56f;
            tailamp = 0.19f;
        }
        if (c.isSitting()) {
            tailamp = 0.0f;
        }
        this.tail1.rotateAngleY = MathHelper.cos(f2 * tailspeed * this.wingspeed) * 3.1415927f * tailamp / 4.0f;
        this.tail2.rotationPointZ = this.tail1.rotationPointZ + (float)Math.cos(this.tail1.rotateAngleY) * 11.0f;
        this.tail2.rotationPointX = this.tail1.rotationPointX + (float)Math.sin(this.tail1.rotateAngleY) * 11.0f;
        this.tail2.rotateAngleY = MathHelper.cos(f2 * tailspeed * this.wingspeed - pi4) * 3.1415927f * tailamp;
        this.tail3.rotationPointZ = this.tail2.rotationPointZ + (float)Math.cos(this.tail2.rotateAngleY) * 9.0f;
        this.tail3.rotationPointX = this.tail2.rotationPointX + (float)Math.sin(this.tail2.rotateAngleY) * 9.0f;
        this.tail3.rotateAngleY = MathHelper.cos(f2 * tailspeed * this.wingspeed - 2.0f * pi4) * 3.1415927f * tailamp;
        this.tail4.rotationPointZ = this.tail3.rotationPointZ + (float)Math.cos(this.tail3.rotateAngleY) * 9.0f;
        this.tail4.rotationPointX = this.tail3.rotationPointX + (float)Math.sin(this.tail3.rotateAngleY) * 9.0f;
        this.tail4.rotateAngleY = MathHelper.cos(f2 * tailspeed * this.wingspeed - 3.0f * pi4) * 3.1415927f * tailamp;
        newangle = MathHelper.cos(f2 * tailspeed * this.wingspeed - 3.0f * pi4) * 3.1415927f * tailamp;
        newangle /= 2.0f;
        this.tail5.rotationPointZ = this.tail4.rotationPointZ + (float)Math.cos(this.tail4.rotateAngleY) * 9.0f;
        this.tail5.rotationPointX = this.tail4.rotationPointX + (float)Math.sin(this.tail4.rotateAngleY) * 9.0f;
        this.tail5.rotateAngleY = this.tail4.rotateAngleY + newangle;
        this.Tailspike1.rotationPointZ = this.tail5.rotationPointZ + (float)Math.cos(this.tail5.rotateAngleY) * 9.0f;
        this.Tailspike1.rotationPointX = this.tail5.rotationPointX + (float)Math.sin(this.tail5.rotateAngleY) * 9.0f;
        this.Tailspike2.rotationPointZ = this.tail5.rotationPointZ + (float)Math.cos(this.tail5.rotateAngleY) * 15.0f;
        this.Tailspike2.rotationPointX = this.tail5.rotationPointX + (float)Math.sin(this.tail5.rotateAngleY) * 15.0f;
        final ModelRenderer tailspike1 = this.Tailspike1;
        final ModelRenderer tailspike2 = this.Tailspike2;
        final float n = this.tail5.rotateAngleY + newangle * 2.0f / 3.0f;
        tailspike2.rotateAngleY = n;
        tailspike1.rotateAngleY = n;
        this.Tailspike3.rotationPointZ = this.Tailspike1.rotationPointZ + (float)Math.cos(this.Tailspike1.rotateAngleY) * 11.0f;
        this.Tailspike3.rotationPointX = this.Tailspike1.rotationPointX + (float)Math.sin(this.Tailspike1.rotateAngleY) * 11.0f;
        this.Tailspike3.rotateAngleY = this.Tailspike1.rotateAngleY + newangle * 3.0f / 2.0f;
        if (c.getActivity() == 1) {
            f3 = (c.prevRotationYaw - c.rotationYaw) * 10.0f;
            f3 = -f3;
            r.rf1 += (f3 - r.rf1) / 50.0f;
            if (r.rf1 > 50.0f) {
                r.rf1 = 50.0f;
            }
            if (r.rf1 < -50.0f) {
                r.rf1 = -50.0f;
            }
            f3 = r.rf1;
        }
        float h4;
        float h3;
        float h2 = h3 = (h4 = f3 * 2.0f / 3.0f);
        float d4;
        float d3;
        float d2 = d3 = (d4 = f4 * 2.0f / 3.0f);
        if (h3 < 0.0f) {
            h4 = (h2 = h3 / 2.0f);
            d4 = (d2 = d3 / 2.0f);
        }
        else {
            h3 = (h2 = h4 / 2.0f);
            d3 = (d2 = d4 / 2.0f);
        }
        this.head7.rotateAngleY = (float)Math.toRadians(h2);
        this.head3.rotateAngleY = (float)Math.toRadians(h2);
        this.headfin.rotateAngleY = (float)Math.toRadians(h2);
        this.jaw5.rotateAngleY = (float)Math.toRadians(h2);
        this.jaw1.rotateAngleY = (float)Math.toRadians(h2);
        this.neck3.rotateAngleY = (float)Math.toRadians(h2) / 8.0f;
        this.neck4.rotateAngleY = (float)Math.toRadians(h2) / 4.0f;
        this.neck5.rotateAngleY = (float)Math.toRadians(h2) / 2.0f;
        this.head7L.rotateAngleY = (float)Math.toRadians(h3);
        this.head3L.rotateAngleY = (float)Math.toRadians(h3);
        this.headfinL.rotateAngleY = (float)Math.toRadians(h3);
        this.jaw5L.rotateAngleY = (float)Math.toRadians(h3);
        this.jaw1L.rotateAngleY = (float)Math.toRadians(h3);
        this.neck3L.rotateAngleY = (float)Math.toRadians(h3) / 8.0f;
        this.neck4L.rotateAngleY = (float)Math.toRadians(h3) / 4.0f;
        this.neck5L.rotateAngleY = (float)Math.toRadians(h3) / 2.0f;
        this.head7R.rotateAngleY = (float)Math.toRadians(h4);
        this.head3R.rotateAngleY = (float)Math.toRadians(h4);
        this.headfinR.rotateAngleY = (float)Math.toRadians(h4);
        this.jaw5R.rotateAngleY = (float)Math.toRadians(h4);
        this.jaw1R.rotateAngleY = (float)Math.toRadians(h4);
        this.neck3R.rotateAngleY = (float)Math.toRadians(h4) / 8.0f;
        this.neck4R.rotateAngleY = (float)Math.toRadians(h4) / 4.0f;
        this.neck5R.rotateAngleY = (float)Math.toRadians(h4) / 2.0f;
        float Rjx;
        float Ljx;
        float jx = Ljx = (Rjx = 0.0f);
        if (c.getAttacking() != 0) {
            newangle = MathHelper.cos(f2 * 0.9f * this.wingspeed) * 3.1415927f * 0.1f;
            Ljx = 0.25f + newangle;
            newangle = MathHelper.cos(f2 * 1.1f * this.wingspeed) * 3.1415927f * 0.1f;
            Rjx = 0.25f + newangle;
            newangle = MathHelper.cos(f2 * 1.3f * this.wingspeed) * 3.1415927f * 0.1f;
            jx = 0.25f + newangle;
        }
        else {
            newangle = MathHelper.cos(f2 * 0.25f * this.wingspeed) * 3.1415927f * 0.02f;
            Ljx = 0.1f + newangle;
            newangle = MathHelper.cos(f2 * 0.3f * this.wingspeed) * 3.1415927f * 0.02f;
            Rjx = 0.1f + newangle;
            newangle = MathHelper.cos(f2 * 0.35f * this.wingspeed) * 3.1415927f * 0.02f;
            jx = 0.1f + newangle;
        }
        this.head7.rotateAngleX = (float)Math.toRadians(d2);
        this.head3.rotateAngleX = (float)Math.toRadians(d2);
        this.headfin.rotateAngleX = (float)Math.toRadians(d2) + 0.5f;
        this.jaw5.rotateAngleX = (float)Math.toRadians(d2) + jx;
        this.jaw1.rotateAngleX = (float)Math.toRadians(d2) + jx;
        this.head7L.rotateAngleX = (float)Math.toRadians(d3);
        this.head3L.rotateAngleX = (float)Math.toRadians(d3);
        this.headfinL.rotateAngleX = (float)Math.toRadians(d3) + 0.5f;
        this.jaw5L.rotateAngleX = (float)Math.toRadians(d3) + Ljx;
        this.jaw1L.rotateAngleX = (float)Math.toRadians(d3) + Ljx;
        this.head7R.rotateAngleX = (float)Math.toRadians(d4);
        this.head3R.rotateAngleX = (float)Math.toRadians(d4);
        this.headfinR.rotateAngleX = (float)Math.toRadians(d4) + 0.5f;
        this.jaw5R.rotateAngleX = (float)Math.toRadians(d4) + Rjx;
        this.jaw1R.rotateAngleX = (float)Math.toRadians(d4) + Rjx;
        d3 = (float)c.getHead1Ext();
        d2 = (float)c.getHead2Ext();
        d4 = (float)c.getHead3Ext();
        this.neck3L.rotateAngleX = -(float)Math.toRadians(d3 / 3.0);
        this.neck4L.rotateAngleX = -(float)Math.toRadians(d3 * 2.0 / 3.0);
        this.neck5L.rotateAngleX = -(float)Math.toRadians(d3);
        this.neck3.rotateAngleX = -(float)Math.toRadians(d2 / 3.0);
        this.neck4.rotateAngleX = -(float)Math.toRadians(d2 * 2.0 / 3.0);
        this.neck5.rotateAngleX = -(float)Math.toRadians(d2);
        this.neck3R.rotateAngleX = -(float)Math.toRadians(d4 / 3.0);
        this.neck4R.rotateAngleX = -(float)Math.toRadians(d4 * 2.0 / 3.0);
        this.neck5R.rotateAngleX = -(float)Math.toRadians(d4);
        this.neck4.rotationPointY = this.neck3.rotationPointY + (float)Math.sin(this.neck3.rotateAngleX) * 9.0f;
        this.neck4.rotationPointZ = this.neck3.rotationPointZ - (float)Math.cos(this.neck3.rotateAngleX) * 9.0f;
        this.neck4.rotationPointX = this.neck3.rotationPointX - (float)Math.sin(this.neck3.rotateAngleY) * 9.0f * (float)Math.cos(this.neck3.rotateAngleX);
        this.neck5.rotationPointY = this.neck4.rotationPointY + (float)Math.sin(this.neck4.rotateAngleX) * 9.0f;
        this.neck5.rotationPointZ = this.neck4.rotationPointZ - (float)Math.cos(this.neck4.rotateAngleX) * 9.0f;
        this.neck5.rotationPointX = this.neck4.rotationPointX - (float)Math.sin(this.neck4.rotateAngleY) * 9.0f * (float)Math.cos(this.neck4.rotateAngleX);
        this.head7.rotationPointY = this.neck5.rotationPointY + (float)Math.sin(this.neck5.rotateAngleX) * 9.0f;
        final ModelRenderer headfin = this.headfin;
        final ModelRenderer jaw5 = this.jaw5;
        final ModelRenderer jaw6 = this.jaw1;
        final ModelRenderer head3 = this.head3;
        final float rotationPointY = this.head7.rotationPointY;
        head3.rotationPointY = rotationPointY;
        jaw6.rotationPointY = rotationPointY;
        jaw5.rotationPointY = rotationPointY;
        headfin.rotationPointY = rotationPointY;
        this.head7.rotationPointZ = this.neck5.rotationPointZ - (float)Math.cos(this.neck5.rotateAngleX) * 9.0f;
        final ModelRenderer headfin2 = this.headfin;
        final ModelRenderer jaw7 = this.jaw5;
        final ModelRenderer jaw8 = this.jaw1;
        final ModelRenderer head4 = this.head3;
        final float rotationPointZ = this.head7.rotationPointZ;
        head4.rotationPointZ = rotationPointZ;
        jaw8.rotationPointZ = rotationPointZ;
        jaw7.rotationPointZ = rotationPointZ;
        headfin2.rotationPointZ = rotationPointZ;
        this.head7.rotationPointX = this.neck5.rotationPointX - (float)Math.sin(this.neck5.rotateAngleY) * 9.0f * (float)Math.cos(this.neck5.rotateAngleX);
        final ModelRenderer headfin3 = this.headfin;
        final ModelRenderer jaw9 = this.jaw5;
        final ModelRenderer jaw10 = this.jaw1;
        final ModelRenderer head5 = this.head3;
        final float rotationPointX = this.head7.rotationPointX;
        head5.rotationPointX = rotationPointX;
        jaw10.rotationPointX = rotationPointX;
        jaw9.rotationPointX = rotationPointX;
        headfin3.rotationPointX = rotationPointX;
        this.neck4L.rotationPointY = this.neck3L.rotationPointY + (float)Math.sin(this.neck3L.rotateAngleX) * 9.0f;
        this.neck4L.rotationPointZ = this.neck3L.rotationPointZ - (float)Math.cos(this.neck3L.rotateAngleX) * 9.0f;
        this.neck4L.rotationPointX = this.neck3L.rotationPointX - (float)Math.sin(this.neck3L.rotateAngleY) * 9.0f * (float)Math.cos(this.neck3L.rotateAngleX);
        this.neck5L.rotationPointY = this.neck4L.rotationPointY + (float)Math.sin(this.neck4L.rotateAngleX) * 9.0f;
        this.neck5L.rotationPointZ = this.neck4L.rotationPointZ - (float)Math.cos(this.neck4L.rotateAngleX) * 9.0f;
        this.neck5L.rotationPointX = this.neck4L.rotationPointX - (float)Math.sin(this.neck4L.rotateAngleY) * 9.0f * (float)Math.cos(this.neck4L.rotateAngleX);
        this.head7L.rotationPointY = this.neck5L.rotationPointY + (float)Math.sin(this.neck5L.rotateAngleX) * 9.0f;
        final ModelRenderer headfinL = this.headfinL;
        final ModelRenderer jaw5L = this.jaw5L;
        final ModelRenderer jaw1L = this.jaw1L;
        final ModelRenderer head3L = this.head3L;
        final float rotationPointY2 = this.head7L.rotationPointY;
        head3L.rotationPointY = rotationPointY2;
        jaw1L.rotationPointY = rotationPointY2;
        jaw5L.rotationPointY = rotationPointY2;
        headfinL.rotationPointY = rotationPointY2;
        this.head7L.rotationPointZ = this.neck5L.rotationPointZ - (float)Math.cos(this.neck5L.rotateAngleX) * 9.0f;
        final ModelRenderer headfinL2 = this.headfinL;
        final ModelRenderer jaw5L2 = this.jaw5L;
        final ModelRenderer jaw1L2 = this.jaw1L;
        final ModelRenderer head3L2 = this.head3L;
        final float rotationPointZ2 = this.head7L.rotationPointZ;
        head3L2.rotationPointZ = rotationPointZ2;
        jaw1L2.rotationPointZ = rotationPointZ2;
        jaw5L2.rotationPointZ = rotationPointZ2;
        headfinL2.rotationPointZ = rotationPointZ2;
        this.head7L.rotationPointX = this.neck5L.rotationPointX - (float)Math.sin(this.neck5L.rotateAngleY) * 9.0f * (float)Math.cos(this.neck5L.rotateAngleX);
        final ModelRenderer headfinL3 = this.headfinL;
        final ModelRenderer jaw5L3 = this.jaw5L;
        final ModelRenderer jaw1L3 = this.jaw1L;
        final ModelRenderer head3L3 = this.head3L;
        final float rotationPointX2 = this.head7L.rotationPointX;
        head3L3.rotationPointX = rotationPointX2;
        jaw1L3.rotationPointX = rotationPointX2;
        jaw5L3.rotationPointX = rotationPointX2;
        headfinL3.rotationPointX = rotationPointX2;
        this.neck4R.rotationPointY = this.neck3R.rotationPointY + (float)Math.sin(this.neck3R.rotateAngleX) * 9.0f;
        this.neck4R.rotationPointZ = this.neck3R.rotationPointZ - (float)Math.cos(this.neck3R.rotateAngleX) * 9.0f;
        this.neck4R.rotationPointX = this.neck3R.rotationPointX - (float)Math.sin(this.neck3R.rotateAngleY) * 9.0f * (float)Math.cos(this.neck3R.rotateAngleX);
        this.neck5R.rotationPointY = this.neck4R.rotationPointY + (float)Math.sin(this.neck4R.rotateAngleX) * 9.0f;
        this.neck5R.rotationPointZ = this.neck4R.rotationPointZ - (float)Math.cos(this.neck4R.rotateAngleX) * 9.0f;
        this.neck5R.rotationPointX = this.neck4R.rotationPointX - (float)Math.sin(this.neck4R.rotateAngleY) * 9.0f * (float)Math.cos(this.neck4R.rotateAngleX);
        this.head7R.rotationPointY = this.neck5R.rotationPointY + (float)Math.sin(this.neck5R.rotateAngleX) * 9.0f;
        final ModelRenderer headfinR = this.headfinR;
        final ModelRenderer jaw5R = this.jaw5R;
        final ModelRenderer jaw1R = this.jaw1R;
        final ModelRenderer head3R = this.head3R;
        final float rotationPointY3 = this.head7R.rotationPointY;
        head3R.rotationPointY = rotationPointY3;
        jaw1R.rotationPointY = rotationPointY3;
        jaw5R.rotationPointY = rotationPointY3;
        headfinR.rotationPointY = rotationPointY3;
        this.head7R.rotationPointZ = this.neck5R.rotationPointZ - (float)Math.cos(this.neck5R.rotateAngleX) * 9.0f;
        final ModelRenderer headfinR2 = this.headfinR;
        final ModelRenderer jaw5R2 = this.jaw5R;
        final ModelRenderer jaw1R2 = this.jaw1R;
        final ModelRenderer head3R2 = this.head3R;
        final float rotationPointZ3 = this.head7R.rotationPointZ;
        head3R2.rotationPointZ = rotationPointZ3;
        jaw1R2.rotationPointZ = rotationPointZ3;
        jaw5R2.rotationPointZ = rotationPointZ3;
        headfinR2.rotationPointZ = rotationPointZ3;
        this.head7R.rotationPointX = this.neck5R.rotationPointX - (float)Math.sin(this.neck5R.rotateAngleY) * 9.0f * (float)Math.cos(this.neck5R.rotateAngleX);
        final ModelRenderer headfinR3 = this.headfinR;
        final ModelRenderer jaw5R3 = this.jaw5R;
        final ModelRenderer jaw1R3 = this.jaw1R;
        final ModelRenderer head3R3 = this.head3R;
        final float rotationPointX3 = this.head7R.rotationPointX;
        head3R3.rotationPointX = rotationPointX3;
        jaw1R3.rotationPointX = rotationPointX3;
        jaw5R3.rotationPointX = rotationPointX3;
        headfinR3.rotationPointX = rotationPointX3;
        c.setRenderInfo(r);
        this.body.render(f5);
        this.leftleg1.render(f5);
        this.tail1.render(f5);
        this.leftleg2.render(f5);
        this.body2.render(f5);
        this.leftleg3.render(f5);
        this.tail2.render(f5);
        this.tail3.render(f5);
        this.lclaw2.render(f5);
        this.lclaw4.render(f5);
        this.lclaw5.render(f5);
        this.lclaw6.render(f5);
        this.lclaw7.render(f5);
        this.tail4.render(f5);
        this.tail5.render(f5);
        this.neck1.render(f5);
        this.neck3.render(f5);
        this.head3.render(f5);
        this.jaw1.render(f5);
        this.jaw5.render(f5);
        this.head7.render(f5);
        this.rightleg1.render(f5);
        this.rightleg2.render(f5);
        this.rightleg3.render(f5);
        this.rclaw2.render(f5);
        this.rclaw4.render(f5);
        this.rclaw5.render(f5);
        this.rclaw7.render(f5);
        this.rclaw6.render(f5);
        this.wing1.render(f5);
        this.wing2.render(f5);
        this.lshoulder.render(f5);
        this.rshoulder.render(f5);
        this.rwing1.render(f5);
        this.rwing2.render(f5);
        this.neck4.render(f5);
        this.neck5.render(f5);
        this.wing3.render(f5);
        this.rwing3.render(f5);
        this.wing4.render(f5);
        this.rwing4.render(f5);
        this.Tailspike1.render(f5);
        this.Tailspike2.render(f5);
        this.Tailspike3.render(f5);
        this.headfin.render(f5);
        this.backfin1.render(f5);
        this.backfin2.render(f5);
        this.neck3L.render(f5);
        this.neck4L.render(f5);
        this.neck3R.render(f5);
        this.neck4R.render(f5);
        this.neck5L.render(f5);
        this.neck5R.render(f5);
        this.jaw5L.render(f5);
        this.jaw5R.render(f5);
        this.head7L.render(f5);
        this.headfinL.render(f5);
        this.headfinR.render(f5);
        this.head7R.render(f5);
        this.jaw1L.render(f5);
        this.jaw1R.render(f5);
        this.head3L.render(f5);
        this.head3R.render(f5);
        GL11.glPushMatrix();
        GL11.glEnable(2977);
        GL11.glEnable(3042);
        GL11.glBlendFunc(770, 771);
        GL11.glColor4f(0.75f, 0.75f, 0.75f, 0.55f);
        this.mem1.render(f5);
        this.mem2.render(f5);
        this.rmem1.render(f5);
        this.rmem2.render(f5);
        this.mem3.render(f5);
        this.rmem3.render(f5);
        this.mem4.render(f5);
        this.rmem4.render(f5);
        GL11.glDisable(3042);
        GL11.glPopMatrix();
    }
    
    private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
    
    public void setRotationAngles(final float par1, final float par2, final float par3, final float par4, final float par5, final float par6, final Entity par7Entity) {
        super.setRotationAngles(par1, par2, par3, par4, par5, par6, par7Entity);
    }
}
